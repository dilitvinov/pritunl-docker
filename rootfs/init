#!/usr/bin/env bash

set -o errexit
set -o pipefail
set -o nounset

if [[ -n "${MONGODB_USER:-}" ]] && [[ -n "${MONGODB_PASS:-}" ]]; then
	export MONGODB_AUTH="$MONGODB_USER:$MONGODB_PASS@"
fi

export RAW_DB="mongodb://${MONGODB_AUTH:-}${MONGODB_SERVER:-"mongo"}:${MONGODB_PORT:-"27017"}/${MONGODB_NAME:-"pritunl"}"

if [[ -n "${MONGODB_URL:-}" ]]; then
	export RAW_DB=$MONGODB_URL
fi

export DB_WITH_OPTIONS="$RAW_DB?${MONGODB_OPTIONS:-}"
pritunl set-mongodb "$DB_WITH_OPTIONS"

if [[ "${K8S_INGRESS:-false}" == "false" ]] ; then # in k8s ingress mode, web server port is always 80
    # get actual port | get value from line | trim spaces
    actual_server_port=$(pritunl get app.server_port | cut -d "=" -f2 | awk '{$1=$1};1')
    if [[ "$actual_server_port" -ne "${SERVER_PORT:-443}" ]]; then
        pritunl set app.server_port "${SERVER_PORT:-443}"
    fi
fi

# get property | get value | trim | remove quotes 
lic_server="$(pritunl get app.dedicated | cut -d "=" -f2 | awk '{$1=$1};1' | sed -e 's/^"//' -e 's/"$//')"
if [[ -n "${LIC_SERVER:-}" ]] && [[ "$lic_server" != "${LIC_SERVER:-}" ]]; then
    pritunl set app.dedicated "${LIC_SERVER:-}"
fi

lic_key="$(pritunl get app.license | cut -d "=" -f2 | awk '{$1=$1};1'| sed -e 's/^"//' -e 's/"$//')"
if [[ -n "${LIC_KEY:-}" ]] && [[ "$lic_key" != "${LIC_KEY:-}" ]]; then
    pritunl set app.license "${LIC_KEY:-}"
fi

if [[ "${K8S_INGRESS:-false}" == "false" ]] ; then # doesn't need a SSL cert while in k8s ingress mode
    actual_acme_domain="$(pritunl get app.acme_domain | cut -d "=" -f2 | awk '{$1=$1};1' | sed -e 's/^"//' -e 's/"$//')"
    if [[ -n "${ACME_DOMAIN:-}" ]] && [[ "$actual_acme_domain" != "${ACME_DOMAIN}" ]] ; then
        pritunl set app.acme_timestamp "$(date +%s)"
        pritunl set app.acme_key "$(openssl genrsa 4096)"
        pritunl set app.acme_domain "$ACME_DOMAIN"
    fi
fi

reverse_proxy_enabled="$(pritunl get app.reverse_proxy | cut -d "=" -f2 | awk '{$1=$1};1' | sed -e 's/^"//' -e 's/"$//')"
if [[ "${K8S_INGRESS:-false}" == "true" ]] && [[ "$reverse_proxy_enabled" != "true" ]] ; then
    pritunl set app.reverse_proxy true 
    pritunl set app.redirect_server false 
    pritunl set app.server_ssl false 
    pritunl set app.server_port 80
fi

pritunl start
